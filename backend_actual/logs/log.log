[2022-01-29 14:52:25] [INFO] [case_table.py]/[line: 51]/[get] get method 
[2022-01-29 14:52:48] [INFO] [case_table.py]/[line: 60]/[post] None 
[2022-01-29 14:52:48] [INFO] [case_table.py]/[line: 61]/[post] post method 
[2022-01-29 14:53:02] [INFO] [case_table.py]/[line: 69]/[put] put method 
[2022-01-29 14:53:09] [INFO] [case_table.py]/[line: 77]/[delete] delete method 
[2022-01-29 15:06:19] [INFO] [case_table.py]/[line: 66]/[post] 接收到的参数<====== {'id': 1, 'case_title': 'test_demo1', 'remark': 'remark1'} 
[2022-01-29 15:06:19] [INFO] [case_table.py]/[line: 70]/[post] 查询表结果：None 
[2022-01-29 15:06:19] [INFO] [case_table.py]/[line: 75]/[post] 将要存储的内容为<======<TestCase (transient 140557116259824)> 
[2022-01-29 15:06:48] [INFO] [case_table.py]/[line: 66]/[post] 接收到的参数<====== {'id': 2, 'case_title': 'test_demo2', 'remark': 'remark2'} 
[2022-01-29 15:06:48] [INFO] [case_table.py]/[line: 70]/[post] 查询表结果：None 
[2022-01-29 15:06:48] [INFO] [case_table.py]/[line: 75]/[post] 将要存储的内容为<======<TestCase (transient 140557126587872)> 
[2022-01-29 15:07:40] [INFO] [case_table.py]/[line: 66]/[post] 接收到的参数<====== {'id': 2, 'case_title': 'test_demo2', 'remark': 'remark2'} 
[2022-01-29 15:07:40] [INFO] [case_table.py]/[line: 70]/[post] 查询表结果：<TestCase 2> 
[2022-01-29 15:14:40] [INFO] [case_table.py]/[line: 100]/[delete] 接收到的参数id <=====0 
[2022-01-29 15:14:50] [INFO] [case_table.py]/[line: 100]/[delete] 接收到的参数id <=====1 
[2022-01-29 15:23:54] [INFO] [case_table.py]/[line: 58]/[get] 接收到的参数 <===== ImmutableMultiDict([]) 
[2022-01-29 15:24:20] [INFO] [case_table.py]/[line: 89]/[post] 接收到的参数<====== {'id': 3, 'case_title': 'case_title3', 'remark': 'case remark3'} 
[2022-01-29 15:24:20] [INFO] [case_table.py]/[line: 93]/[post] 查询表结果：None 
[2022-01-29 15:24:20] [INFO] [case_table.py]/[line: 98]/[post] 将要存储的内容为<======<TestCase (transient 140636556369056)> 
[2022-01-29 15:24:31] [INFO] [case_table.py]/[line: 89]/[post] 接收到的参数<====== {'id': 4, 'case_title': 'case_title4', 'remark': 'case remark4'} 
[2022-01-29 15:24:31] [INFO] [case_table.py]/[line: 93]/[post] 查询表结果：None 
[2022-01-29 15:24:31] [INFO] [case_table.py]/[line: 98]/[post] 将要存储的内容为<======<TestCase (transient 140636566665200)> 
[2022-01-29 15:24:38] [INFO] [case_table.py]/[line: 89]/[post] 接收到的参数<====== {'id': 5, 'case_title': 'case_title5', 'remark': 'case remark5'} 
[2022-01-29 15:24:38] [INFO] [case_table.py]/[line: 93]/[post] 查询表结果：None 
[2022-01-29 15:24:38] [INFO] [case_table.py]/[line: 98]/[post] 将要存储的内容为<======<TestCase (transient 140636565063328)> 
[2022-01-29 15:24:44] [INFO] [case_table.py]/[line: 89]/[post] 接收到的参数<====== {'id': 6, 'case_title': 'case_title6', 'remark': 'case remark6'} 
[2022-01-29 15:24:44] [INFO] [case_table.py]/[line: 93]/[post] 查询表结果：None 
[2022-01-29 15:24:44] [INFO] [case_table.py]/[line: 98]/[post] 将要存储的内容为<======<TestCase (transient 140636566950288)> 
[2022-01-29 15:24:59] [INFO] [case_table.py]/[line: 58]/[get] 接收到的参数 <===== ImmutableMultiDict([]) 
[2022-01-29 15:25:14] [INFO] [case_table.py]/[line: 58]/[get] 接收到的参数 <===== ImmutableMultiDict([('id', '4')]) 
[2022-01-29 15:26:53] [INFO] [case_table.py]/[line: 58]/[get] 接收到的参数 <===== ImmutableMultiDict([('id', '4')]) 
[2022-01-29 15:29:41] [INFO] [case_table.py]/[line: 58]/[get] 接收到的参数 <===== 4 
[2022-01-29 15:29:41] [INFO] [case_table.py]/[line: 62]/[get] <TestCase 4> 
[2022-01-29 15:29:41] [INFO] [case_table.py]/[line: 67]/[get] 要返回的数据为<======[{'id': 4, 'case_title': 'case_title4', 'remark': 'case remark4'}] 
[2022-01-29 15:37:47] [INFO] [case_table.py]/[line: 119]/[put] 接收到的参数<====== {'id': 7, 'case_title': 'string', 'remark': 'string'} 
[2022-01-29 15:37:47] [INFO] [case_table.py]/[line: 123]/[put] 查询表结果：None 
[2022-01-29 15:38:10] [INFO] [case_table.py]/[line: 119]/[put] 接收到的参数<====== {'id': 6, 'case_title': 'case title 666', 'remark': 'remark 666'} 
[2022-01-29 15:38:10] [INFO] [case_table.py]/[line: 123]/[put] 查询表结果：<TestCase 6> 
[2022-01-29 15:53:31] [INFO] [case_table.py]/[line: 59]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-01-29 15:53:31] [INFO] [case_table.py]/[line: 60]/[get] 接收到的参数 <===== 4 
[2022-01-29 15:53:32] [INFO] [case_table.py]/[line: 64]/[get] <TestCase 4> 
[2022-01-29 15:53:32] [INFO] [case_table.py]/[line: 69]/[get] 要返回的数据为<======[{'id': 4, 'case_title': 'case_title4', 'remark': 'case remark4'}] 
[2022-03-19 22:02:52] [INFO] [case_table.py]/[line: 62]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-19 22:02:52] [INFO] [case_table.py]/[line: 63]/[get] 接收到的参数 <===== None 
[2022-03-19 22:03:12] [INFO] [case_table.py]/[line: 97]/[post] 接收到的参数<====== {'case_title': '用例1', 'remark': '标记'} 
[2022-03-19 22:03:12] [INFO] [case_table.py]/[line: 101]/[post] 查询表结果：None 
[2022-03-19 22:03:12] [INFO] [case_table.py]/[line: 106]/[post] 将要存储的内容为<======<TestCase (transient 4496321072)> 
[2022-03-19 22:03:14] [INFO] [case_table.py]/[line: 97]/[post] 接收到的参数<====== {'case_title': '用例1', 'remark': '标记'} 
[2022-03-19 22:03:14] [INFO] [case_table.py]/[line: 101]/[post] 查询表结果：None 
[2022-03-19 22:03:14] [INFO] [case_table.py]/[line: 106]/[post] 将要存储的内容为<======<TestCase (transient 4496924048)> 
[2022-03-19 22:04:10] [INFO] [case_table.py]/[line: 97]/[post] 接收到的参数<====== {'id': 1, 'case_title': '用例1', 'remark': 'string'} 
[2022-03-19 22:04:10] [INFO] [case_table.py]/[line: 101]/[post] 查询表结果：<TestCase 1> 
[2022-03-19 22:04:12] [INFO] [case_table.py]/[line: 97]/[post] 接收到的参数<====== {'id': 1, 'case_title': '用例1', 'remark': 'string'} 
[2022-03-19 22:04:12] [INFO] [case_table.py]/[line: 101]/[post] 查询表结果：<TestCase 1> 
[2022-03-19 22:04:20] [INFO] [case_table.py]/[line: 97]/[post] 接收到的参数<====== {'id': 2, 'case_title': '用例2', 'remark': 'string'} 
[2022-03-19 22:04:20] [INFO] [case_table.py]/[line: 101]/[post] 查询表结果：None 
[2022-03-19 22:04:20] [INFO] [case_table.py]/[line: 106]/[post] 将要存储的内容为<======<TestCase (transient 4497956048)> 
[2022-03-19 22:04:26] [INFO] [case_table.py]/[line: 62]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-19 22:04:26] [INFO] [case_table.py]/[line: 63]/[get] 接收到的参数 <===== None 
[2022-03-20 15:25:17] [INFO] [case_table.py]/[line: 62]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-20 15:25:17] [INFO] [case_table.py]/[line: 63]/[get] 接收到的参数 <===== None 
[2022-03-20 15:25:37] [INFO] [case_table.py]/[line: 62]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-20 15:25:37] [INFO] [case_table.py]/[line: 63]/[get] 接收到的参数 <===== 1 
[2022-03-20 15:25:37] [INFO] [case_table.py]/[line: 67]/[get] <TestCase 1> 
[2022-03-20 15:25:37] [INFO] [case_table.py]/[line: 72]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'test_demo1.py', 'remark': 'string1'}] 
[2022-03-20 15:25:57] [INFO] [case_table.py]/[line: 97]/[post] 接收到的参数<====== {'id': 3, 'case_title': 'test3', 'remark': 'test3'} 
[2022-03-20 15:25:57] [INFO] [case_table.py]/[line: 101]/[post] 查询表结果：None 
[2022-03-20 15:25:57] [INFO] [case_table.py]/[line: 106]/[post] 将要存储的内容为<======<TestCase (transient 4431539984)> 
[2022-03-20 15:26:02] [INFO] [case_table.py]/[line: 62]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-20 15:26:02] [INFO] [case_table.py]/[line: 63]/[get] 接收到的参数 <===== 1 
[2022-03-20 15:26:02] [INFO] [case_table.py]/[line: 67]/[get] <TestCase 1> 
[2022-03-20 15:26:02] [INFO] [case_table.py]/[line: 72]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'test_demo1.py', 'remark': 'string1'}] 
[2022-03-20 15:26:28] [INFO] [case_table.py]/[line: 125]/[put] 接收到的参数<====== {'id': 1, 'case_title': 'testcase_demo.py', 'remark': 'string'} 
[2022-03-20 15:26:28] [INFO] [case_table.py]/[line: 129]/[put] 查询表结果：<TestCase 1> 
[2022-03-20 15:26:37] [INFO] [case_table.py]/[line: 62]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-20 15:26:37] [INFO] [case_table.py]/[line: 63]/[get] 接收到的参数 <===== 1 
[2022-03-20 15:26:37] [INFO] [case_table.py]/[line: 67]/[get] <TestCase 1> 
[2022-03-20 15:26:37] [INFO] [case_table.py]/[line: 72]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase_demo.py', 'remark': 'string'}] 
[2022-03-20 15:26:56] [INFO] [case_table.py]/[line: 153]/[delete] 接收到的参数id <=====3 
[2022-03-20 15:26:58] [INFO] [case_table.py]/[line: 153]/[delete] 接收到的参数id <=====3 
[2022-03-20 15:27:04] [INFO] [case_table.py]/[line: 62]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-20 15:27:04] [INFO] [case_table.py]/[line: 63]/[get] 接收到的参数 <===== 1 
[2022-03-20 15:27:04] [INFO] [case_table.py]/[line: 67]/[get] <TestCase 1> 
[2022-03-20 15:27:04] [INFO] [case_table.py]/[line: 72]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase_demo.py', 'remark': 'string'}] 
[2022-03-20 15:27:17] [INFO] [case_table.py]/[line: 62]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-20 15:27:17] [INFO] [case_table.py]/[line: 63]/[get] 接收到的参数 <===== None 
[2022-03-20 16:01:58] [INFO] [testcase.py]/[line: 30]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-20 16:01:58] [INFO] [testcase.py]/[line: 31]/[get] 接收到的参数 <===== None 
[2022-03-20 16:40:38] [INFO] [testcase.py]/[line: 31]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-20 16:40:38] [INFO] [testcase.py]/[line: 32]/[get] 接收到的参数 <===== None 
[2022-03-20 16:50:47] [INFO] [testcase.py]/[line: 31]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-20 16:50:47] [INFO] [testcase.py]/[line: 32]/[get] 接收到的参数 <===== None 
[2022-03-20 16:51:06] [INFO] [testcase.py]/[line: 53]/[post] 接收到的参数<====== {'id': 3, 'case_title': 'testcase3.py', 'remark': 'string3'} 
[2022-03-20 16:51:06] [INFO] [testcase.py]/[line: 38]/[create] 查询表结果：None 
[2022-03-20 16:51:06] [INFO] [testcase.py]/[line: 41]/[create] 将要存储的内容为<======<TestCase (transient 4478341760)> 
[2022-03-20 16:51:12] [INFO] [testcase.py]/[line: 31]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-20 16:51:12] [INFO] [testcase.py]/[line: 32]/[get] 接收到的参数 <===== None 
[2022-03-20 16:57:37] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-20 16:57:37] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-20 16:57:57] [INFO] [testcase.py]/[line: 54]/[post] 接收到的参数<====== {'id': 4, 'case_title': 'testcase4.py', 'remark': 'string444'} 
[2022-03-20 16:57:57] [INFO] [testcase.py]/[line: 39]/[create] 查询表结果：None 
[2022-03-20 16:57:57] [INFO] [testcase_model.py]/[line: 34]/[create] 将要存储的内容为<======<TestCase (transient 4599865296)> 
[2022-03-20 17:03:09] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-20 17:03:09] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-20 17:12:21] [INFO] [testcase.py]/[line: 17]/[get] <TestCase 1> 
[2022-03-20 17:12:21] [INFO] [testcase.py]/[line: 22]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase_demo.py', 'remark': 'string'}] 
[2022-03-20 17:13:12] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase_demo.py', 'remark': 'string'}, {'id': 2, 'case_title': 'test_demo2.py', 'remark': 'content1'}, {'id': 3, 'case_title': 'testcase3.py', 'remark': 'string3'}, {'id': 4, 'case_title': 'testcase4.py', 'remark': 'string444'}] 
[2022-03-20 17:13:37] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase_demo.py', 'remark': 'string'}, {'id': 2, 'case_title': 'test_demo2.py', 'remark': 'content1'}, {'id': 3, 'case_title': 'testcase3.py', 'remark': 'string3'}, {'id': 4, 'case_title': 'testcase4.py', 'remark': 'string444'}] 
[2022-03-20 17:16:41] [INFO] [testcase.py]/[line: 40]/[create] 查询表结果：None 
[2022-03-20 17:16:41] [INFO] [testcase_model.py]/[line: 34]/[create] 将要存储的内容为<======<TestCase (transient 4451850416)> 
[2022-03-20 17:16:41] [INFO] [testcase.py]/[line: 17]/[get] None 
[2022-03-20 17:16:41] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[] 
[2022-03-20 17:24:05] [INFO] [testcase.py]/[line: 17]/[get] None 
[2022-03-20 17:24:05] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[] 
[2022-03-20 17:25:21] [INFO] [testcase.py]/[line: 40]/[create] 查询表结果：None 
[2022-03-20 17:25:21] [INFO] [testcase_model.py]/[line: 34]/[create] 将要存储的内容为<======<TestCase (transient 4529617456)> 
[2022-03-20 17:25:21] [INFO] [testcase.py]/[line: 17]/[get] <TestCase 6> 
[2022-03-20 17:25:21] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 6, 'case_title': 'testcase6.py', 'remark': '6666'}] 
[2022-03-20 17:25:27] [INFO] [testcase.py]/[line: 40]/[create] 查询表结果：None 
[2022-03-20 17:25:27] [INFO] [testcase_model.py]/[line: 34]/[create] 将要存储的内容为<======<TestCase (transient 4456184224)> 
[2022-03-20 17:25:27] [INFO] [testcase.py]/[line: 17]/[get] <TestCase 6> 
[2022-03-20 17:25:27] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 6, 'case_title': 'testcase6.py', 'remark': '6666'}] 
[2022-03-27 15:40:02] [INFO] [testcase.py]/[line: 40]/[create] 查询表结果：None 
[2022-03-27 15:40:02] [INFO] [testcase_model.py]/[line: 35]/[create] 将要存储的内容为<======<TestcaseModel (transient 4532241072)> 
[2022-03-27 15:40:02] [INFO] [testcase.py]/[line: 17]/[get] <TestcaseModel 1> 
[2022-03-27 15:40:02] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '1111'}] 
[2022-03-27 15:40:15] [INFO] [testcase.py]/[line: 40]/[create] 查询表结果：None 
[2022-03-27 15:40:15] [INFO] [testcase_model.py]/[line: 35]/[create] 将要存储的内容为<======<TestcaseModel (transient 4563866240)> 
[2022-03-27 15:40:15] [INFO] [testcase.py]/[line: 17]/[get] <TestcaseModel 1> 
[2022-03-27 15:40:15] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '1111'}] 
[2022-03-27 15:41:08] [DEBUG] [plan.py]/[line: 24]/[create] 测试列表[1, 2]，获取到的测试用例的对象为[<TestcaseModel 1>, <TestcaseModel 2>] 
[2022-03-27 15:47:14] [DEBUG] [plan.py]/[line: 33]/[create] 测试列表[1, 2]，获取到的测试用例的对象为[<TestcaseModel 1>, <TestcaseModel 2>] 
[2022-03-27 15:48:06] [DEBUG] [plan.py]/[line: 33]/[create] 测试列表[1, 2]，获取到的测试用例的对象为[<TestcaseModel 1>, <TestcaseModel 2>] 
[2022-03-27 15:52:44] [DEBUG] [plan.py]/[line: 33]/[create] 测试列表[1, 2]，获取到的测试用例的对象为[<TestcaseModel 1>, <TestcaseModel 2>] 
[2022-03-27 15:52:44] [DEBUG] [plan_model.py]/[line: 41]/[create] 创建的测试计划的ID为->3 
[2022-03-27 15:52:44] [DEBUG] [plan.py]/[line: 18]/[execute] 测试计划3，要执行的的测试用例内容[<TestcaseModel 1>, <TestcaseModel 2>] 
[2022-03-27 15:53:56] [INFO] [testcase.py]/[line: 40]/[create] 查询表结果：None 
[2022-03-27 15:53:56] [INFO] [testcase_model.py]/[line: 35]/[create] 将要存储的内容为<======<TestcaseModel (transient 4525359888)> 
[2022-03-27 15:53:56] [INFO] [testcase.py]/[line: 17]/[get] None 
[2022-03-27 15:53:56] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[] 
[2022-03-27 15:54:18] [INFO] [testcase.py]/[line: 40]/[create] 查询表结果：None 
[2022-03-27 15:54:18] [INFO] [testcase_model.py]/[line: 35]/[create] 将要存储的内容为<======<TestcaseModel (transient 4551295712)> 
[2022-03-27 15:54:18] [INFO] [testcase.py]/[line: 17]/[get] <TestcaseModel 1> 
[2022-03-27 15:54:18] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '111'}] 
[2022-03-27 15:54:39] [DEBUG] [plan.py]/[line: 33]/[create] 测试列表[1, 2]，获取到的测试用例的对象为[<TestcaseModel 1>, <TestcaseModel 2>] 
[2022-03-27 15:54:39] [DEBUG] [plan_model.py]/[line: 41]/[create] 创建的测试计划的ID为->1 
[2022-03-27 15:54:39] [DEBUG] [plan.py]/[line: 18]/[execute] 测试计划1，要执行的的测试用例内容[<TestcaseModel 1>, <TestcaseModel 2>] 
[2022-03-27 15:58:35] [DEBUG] [plan.py]/[line: 44]/[get] 获取到的测试计划的列表为[<PlanModel 1>] 
[2022-03-27 15:58:49] [DEBUG] [plan.py]/[line: 44]/[get] 获取到的测试计划的列表为[<PlanModel 1>] 
[2022-03-27 16:03:02] [DEBUG] [plan.py]/[line: 53]/[get_objs] 获取到的测试计划的列表为[<PlanModel 1>] 
[2022-03-27 16:03:02] [INFO] [plan.py]/[line: 46]/[get] 获取到的测试计划的数据为->[{'id': 1, 'name': '测试计划1', 'testcase_info': [<TestcaseModel 1>, <TestcaseModel 2>]}] 
[2022-03-27 16:05:04] [DEBUG] [plan.py]/[line: 58]/[get_objs] 获取到的测试计划的列表为[<PlanModel 1>] 
[2022-03-27 16:05:16] [DEBUG] [plan.py]/[line: 58]/[get_objs] 获取到的测试计划的列表为[<PlanModel 1>] 
[2022-03-27 16:05:16] [INFO] [plan.py]/[line: 51]/[get] 获取到的测试计划的数据为->[{'id': 1, 'name': '测试计划1', 'testcase_info': ['testcase1.py', 'testcase2.py']}] 
[2022-03-27 16:07:17] [DEBUG] [plan.py]/[line: 33]/[create] 测试列表[2]，获取到的测试用例的对象为[<TestcaseModel 2>] 
[2022-03-27 16:07:17] [DEBUG] [plan_model.py]/[line: 50]/[create] 创建的测试计划的ID为->2 
[2022-03-27 16:07:17] [DEBUG] [plan.py]/[line: 59]/[get_objs] 获取到的测试计划的列表为[<PlanModel 2>] 
[2022-03-27 16:07:17] [INFO] [plan.py]/[line: 51]/[get] 获取到的测试计划的数据为->[{'id': 2, 'name': '测试计划2', 'testcase_info': ['testcase2.py']}] 
[2022-03-27 16:07:17] [DEBUG] [plan.py]/[line: 18]/[execute] 测试计划2，要执行的的测试用例内容[{'id': 2, 'name': '测试计划2', 'testcase_info': ['testcase2.py']}] 
[2022-03-27 16:08:10] [DEBUG] [plan.py]/[line: 33]/[create] 测试列表[1]，获取到的测试用例的对象为[<TestcaseModel 1>] 
[2022-03-27 16:08:10] [DEBUG] [plan_model.py]/[line: 50]/[create] 创建的测试计划的ID为->3 
[2022-03-27 16:08:10] [DEBUG] [plan.py]/[line: 59]/[get_objs] 获取到的测试计划的列表为[<PlanModel 3>] 
[2022-03-27 16:08:10] [INFO] [plan.py]/[line: 51]/[get] 获取到的测试计划的数据为->[{'id': 3, 'name': '测试计划3', 'testcase_info': ['testcase1.py']}] 
[2022-03-27 16:08:10] [DEBUG] [plan.py]/[line: 18]/[execute] 测试计划3，要执行的的测试用例内容['testcase1.py'] 
[2022-03-27 16:32:15] [DEBUG] [build.py]/[line: 43]/[create] 创建构建记录对应的计划id为1， 测试报告为测试报告 
[2022-03-27 16:32:24] [DEBUG] [build.py]/[line: 33]/[get_objs_by_plan_id] 获取到的构建记录的列表为[<BuildModel 1>] 
[2022-03-27 16:32:24] [INFO] [build.py]/[line: 23]/[get] 获取到的构建记录的数据为->[{'plan_id': 1, 'report': '测试报告'}] 
[2022-03-27 16:32:59] [DEBUG] [build.py]/[line: 34]/[get_objs_by_plan_id] 获取到的构建记录的列表为[<BuildModel 1>] 
[2022-03-27 16:32:59] [INFO] [build.py]/[line: 24]/[get] 获取到的构建记录的数据为->[{'plan_id': 1, 'report': '测试报告', 'created_at': datetime.datetime(2022, 3, 27, 16, 32, 16)}] 
[2022-03-27 16:52:43] [INFO] [testcase.py]/[line: 40]/[create] 查询表结果：None 
[2022-03-27 16:52:43] [INFO] [testcase_model.py]/[line: 35]/[create] 将要存储的内容为<======<TestcaseModel (transient 4417030464)> 
[2022-03-27 16:52:43] [INFO] [testcase.py]/[line: 17]/[get] <TestcaseModel 3> 
[2022-03-27 16:52:43] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 3, 'case_title': 'test_wework_case.py', 'remark': '接口测试用例'}] 
[2022-03-27 16:53:19] [DEBUG] [plan.py]/[line: 41]/[create] 测试列表[1, 2]，获取到的测试用例的对象为[<TestcaseModel 1>, <TestcaseModel 2>] 
[2022-03-27 16:53:19] [DEBUG] [plan_model.py]/[line: 50]/[create] 创建的测试计划的ID为->4 
[2022-03-27 16:53:19] [DEBUG] [plan.py]/[line: 74]/[get_objs] 获取到的测试计划的列表为[<PlanModel 4>] 
[2022-03-27 16:53:19] [INFO] [plan.py]/[line: 65]/[get] 获取到的测试计划的数据为->[{'id': 4, 'name': '飞书计划', 'testcase_info': ['testcase1.py', 'testcase2.py']}] 
[2022-03-27 16:53:19] [DEBUG] [plan.py]/[line: 20]/[execute] 测试计划4，要执行的的测试用例内容['testcase1.py', 'testcase2.py'] 
[2022-03-27 16:54:47] [DEBUG] [plan.py]/[line: 45]/[create] 测试列表[1, 2]，获取到的测试用例的对象为[<TestcaseModel 1>, <TestcaseModel 2>] 
[2022-03-27 16:54:47] [DEBUG] [plan_model.py]/[line: 50]/[create] 创建的测试计划的ID为->5 
[2022-03-27 16:54:47] [DEBUG] [plan.py]/[line: 78]/[get_objs] 获取到的测试计划的列表为[<PlanModel 5>] 
[2022-03-27 16:54:47] [INFO] [plan.py]/[line: 69]/[get] 获取到的测试计划的数据为->[{'id': 5, 'name': '飞书计划2', 'testcase_info': ['testcase1.py', 'testcase2.py']}] 
[2022-03-27 16:54:47] [DEBUG] [plan.py]/[line: 24]/[execute] 测试计划5，要执行的的测试用例内容testcase1.py testcase2.py 
[2022-03-27 16:55:45] [DEBUG] [plan.py]/[line: 45]/[create] 测试列表[3]，获取到的测试用例的对象为[<TestcaseModel 3>] 
[2022-03-27 16:55:45] [DEBUG] [plan_model.py]/[line: 50]/[create] 创建的测试计划的ID为->6 
[2022-03-27 16:55:45] [DEBUG] [plan.py]/[line: 78]/[get_objs] 获取到的测试计划的列表为[<PlanModel 6>] 
[2022-03-27 16:55:45] [INFO] [plan.py]/[line: 69]/[get] 获取到的测试计划的数据为->[{'id': 6, 'name': '企业微信计划', 'testcase_info': ['test_wework_case.py']}] 
[2022-03-27 16:55:45] [DEBUG] [plan.py]/[line: 24]/[execute] 测试计划6，要执行的的测试用例内容test_wework_case.py 
[2022-03-27 16:55:45] [DEBUG] [build.py]/[line: 45]/[create] 创建构建记录对应的计划id为6， 测试报告为http://www.loseweight.ren:8080/job/ck21/15/allure 
[2022-03-27 17:15:39] [INFO] [build.py]/[line: 30]/[get] 测试计划获取接口接收到的参数 <===== None 
[2022-03-27 17:15:39] [DEBUG] [build.py]/[line: 35]/[get_objs_by_plan_id] 获取到的构建记录的列表为[<BuildModel 1>, <BuildModel 2>] 
[2022-03-27 17:15:39] [INFO] [build.py]/[line: 25]/[get] 获取到的构建记录的数据为->[{'plan_id': 1, 'report': '测试报告', 'created_at': '2022-03-27 16:32:16'}, {'plan_id': 6, 'report': 'http://www.loseweight.ren:8080/job/ck21/15/allure', 'created_at': '2022-03-27 16:55:45'}] 
[2022-03-27 17:15:53] [INFO] [plan.py]/[line: 30]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:15:53] [INFO] [plan.py]/[line: 31]/[get] 测试计划获取接口接收到的参数 <===== None 
[2022-03-27 17:15:53] [DEBUG] [plan.py]/[line: 78]/[get_objs] 获取到的测试计划的列表为[<PlanModel 6>, <PlanModel 1>, <PlanModel 2>, <PlanModel 3>, <PlanModel 4>, <PlanModel 5>] 
[2022-03-27 17:15:53] [INFO] [plan.py]/[line: 69]/[get] 获取到的测试计划的数据为->[{'id': 6, 'name': '企业微信计划', 'testcase_info': ['test_wework_case.py']}, {'id': 1, 'name': '测试计划1', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 2, 'name': '测试计划2', 'testcase_info': ['testcase2.py']}, {'id': 3, 'name': '测试计划3', 'testcase_info': ['testcase1.py']}, {'id': 4, 'name': '飞书计划', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 5, 'name': '飞书计划2', 'testcase_info': ['testcase1.py', 'testcase2.py']}] 
[2022-03-27 17:16:46] [INFO] [plan.py]/[line: 51]/[post] 测试计划新增接口接收到的参数<====== {'name': 'hogwarts1', 'testcases': '[3]'} 
[2022-03-27 17:16:46] [DEBUG] [plan.py]/[line: 45]/[create] 测试列表[3]，获取到的测试用例的对象为[None, <TestcaseModel 3>, None] 
[2022-03-27 17:18:41] [INFO] [plan.py]/[line: 53]/[post] 测试计划新增接口接收到的参数<====== {'name': 'hogwarts2', 'testcases': '[3]'} 
[2022-03-27 17:18:41] [DEBUG] [plan.py]/[line: 45]/[create] 测试列表[3]，获取到的测试用例的对象为[<TestcaseModel 3>] 
[2022-03-27 17:18:41] [DEBUG] [plan_model.py]/[line: 50]/[create] 创建的测试计划的ID为->8 
[2022-03-27 17:18:41] [DEBUG] [plan.py]/[line: 78]/[get_objs] 获取到的测试计划的列表为[<PlanModel 8>] 
[2022-03-27 17:18:41] [INFO] [plan.py]/[line: 69]/[get] 获取到的测试计划的数据为->[{'id': 8, 'name': 'hogwarts2', 'testcase_info': ['test_wework_case.py']}] 
[2022-03-27 17:18:41] [DEBUG] [plan.py]/[line: 24]/[execute] 测试计划8，要执行的的测试用例内容test_wework_case.py 
[2022-03-27 17:18:41] [DEBUG] [build.py]/[line: 45]/[create] 创建构建记录对应的计划id为8， 测试报告为http://www.loseweight.ren:8080/job/ck21/16/allure 
[2022-03-27 17:18:42] [INFO] [plan.py]/[line: 53]/[post] 测试计划新增接口接收到的参数<====== {'name': 'hogwarts2', 'testcases': '[3]'} 
[2022-03-27 17:18:42] [DEBUG] [plan.py]/[line: 45]/[create] 测试列表[3]，获取到的测试用例的对象为[<TestcaseModel 3>] 
[2022-03-27 17:26:53] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:26:53] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 17:26:53] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '111'}, {'id': 2, 'case_title': 'testcase2.py', 'remark': '2222'}, {'id': 3, 'case_title': 'test_wework_case.py', 'remark': '接口测试用例'}] 
[2022-03-27 17:26:59] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:26:59] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 17:26:59] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '111'}, {'id': 2, 'case_title': 'testcase2.py', 'remark': '2222'}, {'id': 3, 'case_title': 'test_wework_case.py', 'remark': '接口测试用例'}] 
[2022-03-27 17:30:33] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:30:33] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 17:30:34] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '111'}, {'id': 2, 'case_title': 'testcase2.py', 'remark': '2222'}, {'id': 3, 'case_title': 'test_wework_case.py', 'remark': '接口测试用例'}] 
[2022-03-27 17:33:17] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:33:17] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 17:33:17] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '111'}, {'id': 2, 'case_title': 'testcase2.py', 'remark': '2222'}, {'id': 3, 'case_title': 'test_wework_case.py', 'remark': '接口测试用例'}] 
[2022-03-27 17:33:49] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:33:49] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 17:33:49] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '111'}, {'id': 2, 'case_title': 'testcase2.py', 'remark': '2222'}, {'id': 3, 'case_title': 'test_wework_case.py', 'remark': '接口测试用例'}] 
[2022-03-27 17:34:07] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:34:07] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 17:34:07] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '111'}, {'id': 2, 'case_title': 'testcase2.py', 'remark': '2222'}, {'id': 3, 'case_title': 'test_wework_case.py', 'remark': '接口测试用例'}] 
[2022-03-27 17:34:57] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:34:57] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 17:34:57] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '111'}, {'id': 2, 'case_title': 'testcase2.py', 'remark': '2222'}, {'id': 3, 'case_title': 'test_wework_case.py', 'remark': '接口测试用例'}] 
[2022-03-27 17:34:57] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:34:57] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 17:34:57] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '111'}, {'id': 2, 'case_title': 'testcase2.py', 'remark': '2222'}, {'id': 3, 'case_title': 'test_wework_case.py', 'remark': '接口测试用例'}] 
[2022-03-27 17:35:00] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:35:00] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 17:35:00] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '111'}, {'id': 2, 'case_title': 'testcase2.py', 'remark': '2222'}, {'id': 3, 'case_title': 'test_wework_case.py', 'remark': '接口测试用例'}] 
[2022-03-27 17:35:17] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:35:17] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 17:35:17] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '111'}, {'id': 2, 'case_title': 'testcase2.py', 'remark': '2222'}, {'id': 3, 'case_title': 'test_wework_case.py', 'remark': '接口测试用例'}] 
[2022-03-27 17:36:11] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:36:11] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 17:36:11] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '111'}, {'id': 2, 'case_title': 'testcase2.py', 'remark': '2222'}, {'id': 3, 'case_title': 'test_wework_case.py', 'remark': '接口测试用例'}] 
[2022-03-27 17:40:07] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:40:07] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 17:40:07] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '111'}, {'id': 2, 'case_title': 'testcase2.py', 'remark': '2222'}, {'id': 3, 'case_title': 'test_wework_case.py', 'remark': '接口测试用例'}] 
[2022-03-27 17:40:07] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:40:07] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 17:40:07] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '111'}, {'id': 2, 'case_title': 'testcase2.py', 'remark': '2222'}, {'id': 3, 'case_title': 'test_wework_case.py', 'remark': '接口测试用例'}] 
[2022-03-27 17:40:17] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:40:17] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 17:40:17] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '111'}, {'id': 2, 'case_title': 'testcase2.py', 'remark': '2222'}, {'id': 3, 'case_title': 'test_wework_case.py', 'remark': '接口测试用例'}] 
[2022-03-27 17:41:03] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:41:03] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 17:41:03] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '111'}, {'id': 2, 'case_title': 'testcase2.py', 'remark': '2222'}, {'id': 3, 'case_title': 'test_wework_case.py', 'remark': '接口测试用例'}] 
[2022-03-27 17:41:03] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:41:03] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 17:41:03] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '111'}, {'id': 2, 'case_title': 'testcase2.py', 'remark': '2222'}, {'id': 3, 'case_title': 'test_wework_case.py', 'remark': '接口测试用例'}] 
[2022-03-27 17:42:42] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:42:42] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 17:42:42] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '111'}, {'id': 2, 'case_title': 'testcase2.py', 'remark': '2222'}, {'id': 3, 'case_title': 'test_wework_case.py', 'remark': '接口测试用例'}] 
[2022-03-27 17:46:35] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:46:35] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 17:46:35] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '111'}, {'id': 2, 'case_title': 'testcase2.py', 'remark': '2222'}, {'id': 3, 'case_title': 'test_wework_case.py', 'remark': '接口测试用例'}] 
[2022-03-27 17:47:18] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:47:18] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 17:47:18] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '111'}, {'id': 2, 'case_title': 'testcase2.py', 'remark': '2222'}, {'id': 3, 'case_title': 'test_wework_case.py', 'remark': '接口测试用例'}] 
[2022-03-27 17:47:18] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:47:18] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 17:47:18] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '111'}, {'id': 2, 'case_title': 'testcase2.py', 'remark': '2222'}, {'id': 3, 'case_title': 'test_wework_case.py', 'remark': '接口测试用例'}] 
[2022-03-27 17:47:21] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:47:21] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 17:47:21] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '111'}, {'id': 2, 'case_title': 'testcase2.py', 'remark': '2222'}, {'id': 3, 'case_title': 'test_wework_case.py', 'remark': '接口测试用例'}] 
[2022-03-27 17:47:21] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:47:21] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 17:47:21] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '111'}, {'id': 2, 'case_title': 'testcase2.py', 'remark': '2222'}, {'id': 3, 'case_title': 'test_wework_case.py', 'remark': '接口测试用例'}] 
[2022-03-27 17:47:29] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:47:29] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 17:47:29] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '111'}, {'id': 2, 'case_title': 'testcase2.py', 'remark': '2222'}, {'id': 3, 'case_title': 'test_wework_case.py', 'remark': '接口测试用例'}] 
[2022-03-27 17:48:31] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:48:31] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 17:48:31] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '111'}, {'id': 2, 'case_title': 'testcase2.py', 'remark': '2222'}, {'id': 3, 'case_title': 'test_wework_case.py', 'remark': '接口测试用例'}] 
[2022-03-27 17:49:10] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:49:10] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 17:49:12] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:49:12] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 17:50:34] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:50:34] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 17:50:37] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:50:37] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 17:51:54] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:51:54] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 17:51:56] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:51:56] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 17:53:14] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:53:14] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 17:54:49] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:54:49] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 17:55:18] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 17:55:18] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 17:55:18] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '111'}, {'id': 2, 'case_title': 'testcase2.py', 'remark': '2222'}, {'id': 3, 'case_title': 'test_wework_case.py', 'remark': '接口测试用例'}] 
[2022-03-27 18:00:11] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 18:00:11] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 18:00:11] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '111'}, {'id': 2, 'case_title': 'testcase2.py', 'remark': '2222'}, {'id': 3, 'case_title': 'test_wework_case.py', 'remark': '接口测试用例'}] 
[2022-03-27 18:01:12] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 18:01:12] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 18:01:12] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '111'}, {'id': 2, 'case_title': 'testcase2.py', 'remark': '2222'}, {'id': 3, 'case_title': 'test_wework_case.py', 'remark': '接口测试用例'}] 
[2022-03-27 18:01:17] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 18:01:17] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 18:01:18] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '111'}, {'id': 2, 'case_title': 'testcase2.py', 'remark': '2222'}, {'id': 3, 'case_title': 'test_wework_case.py', 'remark': '接口测试用例'}] 
[2022-03-27 18:17:33] [INFO] [plan.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 18:17:33] [INFO] [plan.py]/[line: 33]/[get] 测试计划获取接口接收到的参数 <===== None 
[2022-03-27 18:17:33] [DEBUG] [plan.py]/[line: 78]/[get_objs] 获取到的测试计划的列表为[<PlanModel 8>, <PlanModel 6>, <PlanModel 1>, <PlanModel 2>, <PlanModel 3>, <PlanModel 4>, <PlanModel 5>] 
[2022-03-27 18:17:33] [INFO] [plan.py]/[line: 69]/[get] 获取到的测试计划的数据为->[{'id': 8, 'name': 'hogwarts2', 'testcase_info': ['test_wework_case.py']}, {'id': 6, 'name': '企业微信计划', 'testcase_info': ['test_wework_case.py']}, {'id': 1, 'name': '测试计划1', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 2, 'name': '测试计划2', 'testcase_info': ['testcase2.py']}, {'id': 3, 'name': '测试计划3', 'testcase_info': ['testcase1.py']}, {'id': 4, 'name': '飞书计划', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 5, 'name': '飞书计划2', 'testcase_info': ['testcase1.py', 'testcase2.py']}] 
[2022-03-27 18:19:46] [INFO] [plan.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 18:19:46] [INFO] [plan.py]/[line: 33]/[get] 测试计划获取接口接收到的参数 <===== None 
[2022-03-27 18:19:46] [DEBUG] [plan.py]/[line: 78]/[get_objs] 获取到的测试计划的列表为[<PlanModel 8>, <PlanModel 6>, <PlanModel 1>, <PlanModel 2>, <PlanModel 3>, <PlanModel 4>, <PlanModel 5>] 
[2022-03-27 18:19:47] [INFO] [plan.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 18:19:47] [INFO] [plan.py]/[line: 33]/[get] 测试计划获取接口接收到的参数 <===== None 
[2022-03-27 18:19:47] [DEBUG] [plan.py]/[line: 78]/[get_objs] 获取到的测试计划的列表为[<PlanModel 8>, <PlanModel 6>, <PlanModel 1>, <PlanModel 2>, <PlanModel 3>, <PlanModel 4>, <PlanModel 5>] 
[2022-03-27 18:19:47] [INFO] [plan.py]/[line: 69]/[get] 获取到的测试计划的数据为->[{'id': 8, 'name': 'hogwarts2', 'testcase_info': ['test_wework_case.py']}, {'id': 6, 'name': '企业微信计划', 'testcase_info': ['test_wework_case.py']}, {'id': 1, 'name': '测试计划1', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 2, 'name': '测试计划2', 'testcase_info': ['testcase2.py']}, {'id': 3, 'name': '测试计划3', 'testcase_info': ['testcase1.py']}, {'id': 4, 'name': '飞书计划', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 5, 'name': '飞书计划2', 'testcase_info': ['testcase1.py', 'testcase2.py']}] 
[2022-03-27 18:19:47] [INFO] [plan.py]/[line: 69]/[get] 获取到的测试计划的数据为->[{'id': 8, 'name': 'hogwarts2', 'testcase_info': ['test_wework_case.py']}, {'id': 6, 'name': '企业微信计划', 'testcase_info': ['test_wework_case.py']}, {'id': 1, 'name': '测试计划1', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 2, 'name': '测试计划2', 'testcase_info': ['testcase2.py']}, {'id': 3, 'name': '测试计划3', 'testcase_info': ['testcase1.py']}, {'id': 4, 'name': '飞书计划', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 5, 'name': '飞书计划2', 'testcase_info': ['testcase1.py', 'testcase2.py']}] 
[2022-03-27 18:20:16] [INFO] [plan.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 18:20:16] [INFO] [plan.py]/[line: 33]/[get] 测试计划获取接口接收到的参数 <===== None 
[2022-03-27 18:20:16] [DEBUG] [plan.py]/[line: 78]/[get_objs] 获取到的测试计划的列表为[<PlanModel 8>, <PlanModel 6>, <PlanModel 1>, <PlanModel 2>, <PlanModel 3>, <PlanModel 4>, <PlanModel 5>] 
[2022-03-27 18:20:16] [INFO] [plan.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 18:20:16] [INFO] [plan.py]/[line: 33]/[get] 测试计划获取接口接收到的参数 <===== None 
[2022-03-27 18:20:16] [DEBUG] [plan.py]/[line: 78]/[get_objs] 获取到的测试计划的列表为[<PlanModel 8>, <PlanModel 6>, <PlanModel 1>, <PlanModel 2>, <PlanModel 3>, <PlanModel 4>, <PlanModel 5>] 
[2022-03-27 18:20:16] [INFO] [plan.py]/[line: 69]/[get] 获取到的测试计划的数据为->[{'id': 8, 'name': 'hogwarts2', 'testcase_info': ['test_wework_case.py']}, {'id': 6, 'name': '企业微信计划', 'testcase_info': ['test_wework_case.py']}, {'id': 1, 'name': '测试计划1', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 2, 'name': '测试计划2', 'testcase_info': ['testcase2.py']}, {'id': 3, 'name': '测试计划3', 'testcase_info': ['testcase1.py']}, {'id': 4, 'name': '飞书计划', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 5, 'name': '飞书计划2', 'testcase_info': ['testcase1.py', 'testcase2.py']}] 
[2022-03-27 18:20:16] [INFO] [plan.py]/[line: 69]/[get] 获取到的测试计划的数据为->[{'id': 8, 'name': 'hogwarts2', 'testcase_info': ['test_wework_case.py']}, {'id': 6, 'name': '企业微信计划', 'testcase_info': ['test_wework_case.py']}, {'id': 1, 'name': '测试计划1', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 2, 'name': '测试计划2', 'testcase_info': ['testcase2.py']}, {'id': 3, 'name': '测试计划3', 'testcase_info': ['testcase1.py']}, {'id': 4, 'name': '飞书计划', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 5, 'name': '飞书计划2', 'testcase_info': ['testcase1.py', 'testcase2.py']}] 
[2022-03-27 18:20:17] [INFO] [plan.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 18:20:17] [INFO] [plan.py]/[line: 33]/[get] 测试计划获取接口接收到的参数 <===== None 
[2022-03-27 18:20:17] [DEBUG] [plan.py]/[line: 78]/[get_objs] 获取到的测试计划的列表为[<PlanModel 8>, <PlanModel 6>, <PlanModel 1>, <PlanModel 2>, <PlanModel 3>, <PlanModel 4>, <PlanModel 5>] 
[2022-03-27 18:20:17] [INFO] [plan.py]/[line: 69]/[get] 获取到的测试计划的数据为->[{'id': 8, 'name': 'hogwarts2', 'testcase_info': ['test_wework_case.py']}, {'id': 6, 'name': '企业微信计划', 'testcase_info': ['test_wework_case.py']}, {'id': 1, 'name': '测试计划1', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 2, 'name': '测试计划2', 'testcase_info': ['testcase2.py']}, {'id': 3, 'name': '测试计划3', 'testcase_info': ['testcase1.py']}, {'id': 4, 'name': '飞书计划', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 5, 'name': '飞书计划2', 'testcase_info': ['testcase1.py', 'testcase2.py']}] 
[2022-03-27 18:20:32] [INFO] [plan.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 18:20:32] [INFO] [plan.py]/[line: 33]/[get] 测试计划获取接口接收到的参数 <===== None 
[2022-03-27 18:20:32] [DEBUG] [plan.py]/[line: 78]/[get_objs] 获取到的测试计划的列表为[<PlanModel 8>, <PlanModel 6>, <PlanModel 1>, <PlanModel 2>, <PlanModel 3>, <PlanModel 4>, <PlanModel 5>] 
[2022-03-27 18:20:32] [INFO] [plan.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 18:20:32] [INFO] [plan.py]/[line: 33]/[get] 测试计划获取接口接收到的参数 <===== None 
[2022-03-27 18:20:32] [INFO] [plan.py]/[line: 69]/[get] 获取到的测试计划的数据为->[{'id': 8, 'name': 'hogwarts2', 'testcase_info': ['test_wework_case.py']}, {'id': 6, 'name': '企业微信计划', 'testcase_info': ['test_wework_case.py']}, {'id': 1, 'name': '测试计划1', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 2, 'name': '测试计划2', 'testcase_info': ['testcase2.py']}, {'id': 3, 'name': '测试计划3', 'testcase_info': ['testcase1.py']}, {'id': 4, 'name': '飞书计划', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 5, 'name': '飞书计划2', 'testcase_info': ['testcase1.py', 'testcase2.py']}] 
[2022-03-27 18:20:32] [DEBUG] [plan.py]/[line: 78]/[get_objs] 获取到的测试计划的列表为[<PlanModel 8>, <PlanModel 6>, <PlanModel 1>, <PlanModel 2>, <PlanModel 3>, <PlanModel 4>, <PlanModel 5>] 
[2022-03-27 18:20:32] [INFO] [plan.py]/[line: 69]/[get] 获取到的测试计划的数据为->[{'id': 8, 'name': 'hogwarts2', 'testcase_info': ['test_wework_case.py']}, {'id': 6, 'name': '企业微信计划', 'testcase_info': ['test_wework_case.py']}, {'id': 1, 'name': '测试计划1', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 2, 'name': '测试计划2', 'testcase_info': ['testcase2.py']}, {'id': 3, 'name': '测试计划3', 'testcase_info': ['testcase1.py']}, {'id': 4, 'name': '飞书计划', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 5, 'name': '飞书计划2', 'testcase_info': ['testcase1.py', 'testcase2.py']}] 
[2022-03-27 18:21:31] [INFO] [build.py]/[line: 30]/[get] 测试计划获取接口接收到的参数 <===== None 
[2022-03-27 18:21:31] [DEBUG] [build.py]/[line: 35]/[get_objs_by_plan_id] 获取到的构建记录的列表为[<BuildModel 1>, <BuildModel 2>, <BuildModel 3>] 
[2022-03-27 18:21:31] [INFO] [build.py]/[line: 25]/[get] 获取到的构建记录的数据为->[{'plan_id': 1, 'report': '测试报告', 'created_at': '2022-03-27 16:32:16'}, {'plan_id': 6, 'report': 'http://www.loseweight.ren:8080/job/ck21/15/allure', 'created_at': '2022-03-27 16:55:45'}, {'plan_id': 8, 'report': 'http://www.loseweight.ren:8080/job/ck21/16/allure', 'created_at': '2022-03-27 17:18:24'}] 
[2022-03-27 18:21:46] [INFO] [build.py]/[line: 30]/[get] 测试计划获取接口接收到的参数 <===== None 
[2022-03-27 18:21:46] [DEBUG] [build.py]/[line: 35]/[get_objs_by_plan_id] 获取到的构建记录的列表为[<BuildModel 1>, <BuildModel 2>, <BuildModel 3>] 
[2022-03-27 18:21:46] [INFO] [build.py]/[line: 25]/[get] 获取到的构建记录的数据为->[{'plan_id': 1, 'report': '测试报告', 'created_at': '2022-03-27 16:32:16'}, {'plan_id': 6, 'report': 'http://www.loseweight.ren:8080/job/ck21/15/allure', 'created_at': '2022-03-27 16:55:45'}, {'plan_id': 8, 'report': 'http://www.loseweight.ren:8080/job/ck21/16/allure', 'created_at': '2022-03-27 17:18:24'}] 
[2022-03-27 18:21:50] [INFO] [build.py]/[line: 30]/[get] 测试计划获取接口接收到的参数 <===== None 
[2022-03-27 18:21:50] [DEBUG] [build.py]/[line: 35]/[get_objs_by_plan_id] 获取到的构建记录的列表为[<BuildModel 1>, <BuildModel 2>, <BuildModel 3>] 
[2022-03-27 18:21:50] [INFO] [build.py]/[line: 25]/[get] 获取到的构建记录的数据为->[{'plan_id': 1, 'report': '测试报告', 'created_at': '2022-03-27 16:32:16'}, {'plan_id': 6, 'report': 'http://www.loseweight.ren:8080/job/ck21/15/allure', 'created_at': '2022-03-27 16:55:45'}, {'plan_id': 8, 'report': 'http://www.loseweight.ren:8080/job/ck21/16/allure', 'created_at': '2022-03-27 17:18:24'}] 
[2022-03-27 18:22:15] [INFO] [build.py]/[line: 30]/[get] 测试计划获取接口接收到的参数 <===== 1 
[2022-03-27 18:22:15] [DEBUG] [build.py]/[line: 35]/[get_objs_by_plan_id] 获取到的构建记录的列表为[<BuildModel 1>] 
[2022-03-27 18:22:15] [INFO] [build.py]/[line: 25]/[get] 获取到的构建记录的数据为->[{'plan_id': 1, 'report': '测试报告', 'created_at': '2022-03-27 16:32:16'}] 
[2022-03-27 18:22:20] [INFO] [build.py]/[line: 30]/[get] 测试计划获取接口接收到的参数 <===== 1 
[2022-03-27 18:22:20] [DEBUG] [build.py]/[line: 35]/[get_objs_by_plan_id] 获取到的构建记录的列表为[<BuildModel 1>] 
[2022-03-27 18:22:20] [INFO] [build.py]/[line: 25]/[get] 获取到的构建记录的数据为->[{'plan_id': 1, 'report': '测试报告', 'created_at': '2022-03-27 16:32:16'}] 
[2022-03-27 18:23:01] [INFO] [plan.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 18:23:01] [INFO] [plan.py]/[line: 33]/[get] 测试计划获取接口接收到的参数 <===== None 
[2022-03-27 18:23:01] [INFO] [plan.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 18:23:01] [INFO] [plan.py]/[line: 33]/[get] 测试计划获取接口接收到的参数 <===== None 
[2022-03-27 18:23:01] [DEBUG] [plan.py]/[line: 78]/[get_objs] 获取到的测试计划的列表为[<PlanModel 8>, <PlanModel 6>, <PlanModel 1>, <PlanModel 2>, <PlanModel 3>, <PlanModel 4>, <PlanModel 5>] 
[2022-03-27 18:23:01] [DEBUG] [plan.py]/[line: 78]/[get_objs] 获取到的测试计划的列表为[<PlanModel 8>, <PlanModel 6>, <PlanModel 1>, <PlanModel 2>, <PlanModel 3>, <PlanModel 4>, <PlanModel 5>] 
[2022-03-27 18:23:01] [INFO] [plan.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 18:23:01] [INFO] [plan.py]/[line: 33]/[get] 测试计划获取接口接收到的参数 <===== None 
[2022-03-27 18:23:01] [INFO] [plan.py]/[line: 69]/[get] 获取到的测试计划的数据为->[{'id': 8, 'name': 'hogwarts2', 'testcase_info': ['test_wework_case.py']}, {'id': 6, 'name': '企业微信计划', 'testcase_info': ['test_wework_case.py']}, {'id': 1, 'name': '测试计划1', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 2, 'name': '测试计划2', 'testcase_info': ['testcase2.py']}, {'id': 3, 'name': '测试计划3', 'testcase_info': ['testcase1.py']}, {'id': 4, 'name': '飞书计划', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 5, 'name': '飞书计划2', 'testcase_info': ['testcase1.py', 'testcase2.py']}] 
[2022-03-27 18:23:01] [DEBUG] [plan.py]/[line: 78]/[get_objs] 获取到的测试计划的列表为[<PlanModel 8>, <PlanModel 6>, <PlanModel 1>, <PlanModel 2>, <PlanModel 3>, <PlanModel 4>, <PlanModel 5>] 
[2022-03-27 18:23:01] [INFO] [plan.py]/[line: 69]/[get] 获取到的测试计划的数据为->[{'id': 8, 'name': 'hogwarts2', 'testcase_info': ['test_wework_case.py']}, {'id': 6, 'name': '企业微信计划', 'testcase_info': ['test_wework_case.py']}, {'id': 1, 'name': '测试计划1', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 2, 'name': '测试计划2', 'testcase_info': ['testcase2.py']}, {'id': 3, 'name': '测试计划3', 'testcase_info': ['testcase1.py']}, {'id': 4, 'name': '飞书计划', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 5, 'name': '飞书计划2', 'testcase_info': ['testcase1.py', 'testcase2.py']}] 
[2022-03-27 18:23:01] [INFO] [plan.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 18:23:01] [INFO] [plan.py]/[line: 33]/[get] 测试计划获取接口接收到的参数 <===== None 
[2022-03-27 18:23:01] [DEBUG] [plan.py]/[line: 78]/[get_objs] 获取到的测试计划的列表为[<PlanModel 8>, <PlanModel 6>, <PlanModel 1>, <PlanModel 2>, <PlanModel 3>, <PlanModel 4>, <PlanModel 5>] 
[2022-03-27 18:23:01] [INFO] [plan.py]/[line: 69]/[get] 获取到的测试计划的数据为->[{'id': 8, 'name': 'hogwarts2', 'testcase_info': ['test_wework_case.py']}, {'id': 6, 'name': '企业微信计划', 'testcase_info': ['test_wework_case.py']}, {'id': 1, 'name': '测试计划1', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 2, 'name': '测试计划2', 'testcase_info': ['testcase2.py']}, {'id': 3, 'name': '测试计划3', 'testcase_info': ['testcase1.py']}, {'id': 4, 'name': '飞书计划', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 5, 'name': '飞书计划2', 'testcase_info': ['testcase1.py', 'testcase2.py']}] 
[2022-03-27 18:23:01] [INFO] [plan.py]/[line: 69]/[get] 获取到的测试计划的数据为->[{'id': 8, 'name': 'hogwarts2', 'testcase_info': ['test_wework_case.py']}, {'id': 6, 'name': '企业微信计划', 'testcase_info': ['test_wework_case.py']}, {'id': 1, 'name': '测试计划1', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 2, 'name': '测试计划2', 'testcase_info': ['testcase2.py']}, {'id': 3, 'name': '测试计划3', 'testcase_info': ['testcase1.py']}, {'id': 4, 'name': '飞书计划', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 5, 'name': '飞书计划2', 'testcase_info': ['testcase1.py', 'testcase2.py']}] 
[2022-03-27 18:23:35] [INFO] [plan.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 18:23:35] [INFO] [plan.py]/[line: 33]/[get] 测试计划获取接口接收到的参数 <===== None 
[2022-03-27 18:23:35] [DEBUG] [plan.py]/[line: 78]/[get_objs] 获取到的测试计划的列表为[<PlanModel 8>, <PlanModel 6>, <PlanModel 1>, <PlanModel 2>, <PlanModel 3>, <PlanModel 4>, <PlanModel 5>] 
[2022-03-27 18:23:35] [INFO] [plan.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 18:23:35] [INFO] [plan.py]/[line: 33]/[get] 测试计划获取接口接收到的参数 <===== None 
[2022-03-27 18:23:35] [INFO] [plan.py]/[line: 69]/[get] 获取到的测试计划的数据为->[{'id': 8, 'name': 'hogwarts2', 'testcase_info': ['test_wework_case.py']}, {'id': 6, 'name': '企业微信计划', 'testcase_info': ['test_wework_case.py']}, {'id': 1, 'name': '测试计划1', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 2, 'name': '测试计划2', 'testcase_info': ['testcase2.py']}, {'id': 3, 'name': '测试计划3', 'testcase_info': ['testcase1.py']}, {'id': 4, 'name': '飞书计划', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 5, 'name': '飞书计划2', 'testcase_info': ['testcase1.py', 'testcase2.py']}] 
[2022-03-27 18:23:35] [DEBUG] [plan.py]/[line: 78]/[get_objs] 获取到的测试计划的列表为[<PlanModel 8>, <PlanModel 6>, <PlanModel 1>, <PlanModel 2>, <PlanModel 3>, <PlanModel 4>, <PlanModel 5>] 
[2022-03-27 18:23:35] [INFO] [plan.py]/[line: 69]/[get] 获取到的测试计划的数据为->[{'id': 8, 'name': 'hogwarts2', 'testcase_info': ['test_wework_case.py']}, {'id': 6, 'name': '企业微信计划', 'testcase_info': ['test_wework_case.py']}, {'id': 1, 'name': '测试计划1', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 2, 'name': '测试计划2', 'testcase_info': ['testcase2.py']}, {'id': 3, 'name': '测试计划3', 'testcase_info': ['testcase1.py']}, {'id': 4, 'name': '飞书计划', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 5, 'name': '飞书计划2', 'testcase_info': ['testcase1.py', 'testcase2.py']}] 
[2022-03-27 18:24:09] [INFO] [plan.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 18:24:09] [INFO] [plan.py]/[line: 33]/[get] 测试计划获取接口接收到的参数 <===== None 
[2022-03-27 18:24:09] [DEBUG] [plan.py]/[line: 78]/[get_objs] 获取到的测试计划的列表为[<PlanModel 8>, <PlanModel 6>, <PlanModel 1>, <PlanModel 2>, <PlanModel 3>, <PlanModel 4>, <PlanModel 5>] 
[2022-03-27 18:24:09] [INFO] [plan.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 18:24:09] [INFO] [plan.py]/[line: 33]/[get] 测试计划获取接口接收到的参数 <===== None 
[2022-03-27 18:24:09] [DEBUG] [plan.py]/[line: 78]/[get_objs] 获取到的测试计划的列表为[<PlanModel 8>, <PlanModel 6>, <PlanModel 1>, <PlanModel 2>, <PlanModel 3>, <PlanModel 4>, <PlanModel 5>] 
[2022-03-27 18:24:09] [INFO] [plan.py]/[line: 69]/[get] 获取到的测试计划的数据为->[{'id': 8, 'name': 'hogwarts2', 'testcase_info': ['test_wework_case.py']}, {'id': 6, 'name': '企业微信计划', 'testcase_info': ['test_wework_case.py']}, {'id': 1, 'name': '测试计划1', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 2, 'name': '测试计划2', 'testcase_info': ['testcase2.py']}, {'id': 3, 'name': '测试计划3', 'testcase_info': ['testcase1.py']}, {'id': 4, 'name': '飞书计划', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 5, 'name': '飞书计划2', 'testcase_info': ['testcase1.py', 'testcase2.py']}] 
[2022-03-27 18:24:09] [INFO] [plan.py]/[line: 69]/[get] 获取到的测试计划的数据为->[{'id': 8, 'name': 'hogwarts2', 'testcase_info': ['test_wework_case.py']}, {'id': 6, 'name': '企业微信计划', 'testcase_info': ['test_wework_case.py']}, {'id': 1, 'name': '测试计划1', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 2, 'name': '测试计划2', 'testcase_info': ['testcase2.py']}, {'id': 3, 'name': '测试计划3', 'testcase_info': ['testcase1.py']}, {'id': 4, 'name': '飞书计划', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 5, 'name': '飞书计划2', 'testcase_info': ['testcase1.py', 'testcase2.py']}] 
[2022-03-27 18:24:14] [INFO] [build.py]/[line: 30]/[get] 测试计划获取接口接收到的参数 <===== 1 
[2022-03-27 18:24:14] [DEBUG] [build.py]/[line: 35]/[get_objs_by_plan_id] 获取到的构建记录的列表为[<BuildModel 1>] 
[2022-03-27 18:24:14] [INFO] [build.py]/[line: 25]/[get] 获取到的构建记录的数据为->[{'plan_id': 1, 'report': '测试报告', 'created_at': '2022-03-27 16:32:16'}] 
[2022-03-27 18:24:20] [INFO] [build.py]/[line: 30]/[get] 测试计划获取接口接收到的参数 <===== 8 
[2022-03-27 18:24:21] [DEBUG] [build.py]/[line: 35]/[get_objs_by_plan_id] 获取到的构建记录的列表为[<BuildModel 3>] 
[2022-03-27 18:24:21] [INFO] [build.py]/[line: 25]/[get] 获取到的构建记录的数据为->[{'plan_id': 8, 'report': 'http://www.loseweight.ren:8080/job/ck21/16/allure', 'created_at': '2022-03-27 17:18:24'}] 
[2022-03-27 18:25:14] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 18:25:14] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 18:25:14] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '111'}, {'id': 2, 'case_title': 'testcase2.py', 'remark': '2222'}, {'id': 3, 'case_title': 'test_wework_case.py', 'remark': '接口测试用例'}] 
[2022-03-27 18:26:20] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 18:26:20] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 18:26:20] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '111'}, {'id': 2, 'case_title': 'testcase2.py', 'remark': '2222'}, {'id': 3, 'case_title': 'test_wework_case.py', 'remark': '接口测试用例'}] 
[2022-03-27 18:26:58] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 18:26:58] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 18:26:59] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '111'}, {'id': 2, 'case_title': 'testcase2.py', 'remark': '2222'}, {'id': 3, 'case_title': 'test_wework_case.py', 'remark': '接口测试用例'}] 
[2022-03-27 18:27:49] [INFO] [plan.py]/[line: 53]/[post] 测试计划新增接口接收到的参数<====== {'name': '测开21', 'testcases': [3]} 
[2022-03-27 18:27:49] [DEBUG] [plan.py]/[line: 45]/[create] 测试列表[3]，获取到的测试用例的对象为[<TestcaseModel 3>] 
[2022-03-27 18:27:49] [DEBUG] [plan_model.py]/[line: 50]/[create] 创建的测试计划的ID为->10 
[2022-03-27 18:27:49] [DEBUG] [plan.py]/[line: 78]/[get_objs] 获取到的测试计划的列表为[<PlanModel 10>] 
[2022-03-27 18:27:49] [INFO] [plan.py]/[line: 69]/[get] 获取到的测试计划的数据为->[{'id': 10, 'name': '测开21', 'testcase_info': ['test_wework_case.py']}] 
[2022-03-27 18:27:49] [DEBUG] [plan.py]/[line: 24]/[execute] 测试计划10，要执行的的测试用例内容test_wework_case.py 
[2022-03-27 18:27:49] [DEBUG] [build.py]/[line: 45]/[create] 创建构建记录对应的计划id为10， 测试报告为http://www.loseweight.ren:8080/job/ck21/17/allure 
[2022-03-27 18:27:54] [INFO] [plan.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 18:27:54] [INFO] [plan.py]/[line: 33]/[get] 测试计划获取接口接收到的参数 <===== None 
[2022-03-27 18:27:54] [DEBUG] [plan.py]/[line: 78]/[get_objs] 获取到的测试计划的列表为[<PlanModel 8>, <PlanModel 6>, <PlanModel 10>, <PlanModel 1>, <PlanModel 2>, <PlanModel 3>, <PlanModel 4>, <PlanModel 5>] 
[2022-03-27 18:27:54] [INFO] [plan.py]/[line: 69]/[get] 获取到的测试计划的数据为->[{'id': 8, 'name': 'hogwarts2', 'testcase_info': ['test_wework_case.py']}, {'id': 6, 'name': '企业微信计划', 'testcase_info': ['test_wework_case.py']}, {'id': 10, 'name': '测开21', 'testcase_info': ['test_wework_case.py']}, {'id': 1, 'name': '测试计划1', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 2, 'name': '测试计划2', 'testcase_info': ['testcase2.py']}, {'id': 3, 'name': '测试计划3', 'testcase_info': ['testcase1.py']}, {'id': 4, 'name': '飞书计划', 'testcase_info': ['testcase1.py', 'testcase2.py']}, {'id': 5, 'name': '飞书计划2', 'testcase_info': ['testcase1.py', 'testcase2.py']}] 
[2022-03-27 18:28:00] [INFO] [build.py]/[line: 30]/[get] 测试计划获取接口接收到的参数 <===== 10 
[2022-03-27 18:28:00] [DEBUG] [build.py]/[line: 35]/[get_objs_by_plan_id] 获取到的构建记录的列表为[<BuildModel 4>] 
[2022-03-27 18:28:00] [INFO] [build.py]/[line: 25]/[get] 获取到的构建记录的数据为->[{'plan_id': 10, 'report': 'http://www.loseweight.ren:8080/job/ck21/17/allure', 'created_at': '2022-03-27 18:22:13'}] 
[2022-03-27 18:28:12] [INFO] [testcase.py]/[line: 32]/[get] type(request.args) <===== <class 'werkzeug.datastructures.ImmutableMultiDict'> 
[2022-03-27 18:28:12] [INFO] [testcase.py]/[line: 33]/[get] 接收到的参数 <===== None 
[2022-03-27 18:28:12] [INFO] [testcase.py]/[line: 30]/[get] 要返回的数据为<======[{'id': 1, 'case_title': 'testcase1.py', 'remark': '111'}, {'id': 2, 'case_title': 'testcase2.py', 'remark': '2222'}, {'id': 3, 'case_title': 'test_wework_case.py', 'remark': '接口测试用例'}] 
